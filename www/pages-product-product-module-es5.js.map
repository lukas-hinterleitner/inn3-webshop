{"version":3,"sources":["webpack:///src/app/pages/product/product-routing.module.ts","webpack:///src/app/pages/product/product.page.scss","webpack:///src/app/pages/product/product.page.ts","webpack:///src/app/pages/product/product.module.ts","webpack:///src/app/pages/product/product.page.html"],"names":["routes","path","component","ProductPageRoutingModule","imports","forChild","exports","ProductPage","activatedRoute","productService","router","loadingService","product","quantity","showLoading","snapshot","paramMap","has","productId","get","getProductById","undefined","productLoaded","navigate","closeLoading","selector","template","ProductPageModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,wBAAwB;AAAA;AAAA,O;;AAAxBA,8BAAwB,6DAJpC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIoC,GAAxBH,wBAAwB,CAAxB;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYFI,WAAW;AAKpB,6BAAoBC,cAApB,EAA4DC,cAA5D,EAAoGC,MAApG,EACoBC,cADpB,EACoD;AAAA;;AADhC,eAAAH,cAAA,GAAAA,cAAA;AAAwC,eAAAC,cAAA,GAAAA,cAAA;AAAwC,eAAAC,MAAA,GAAAA,MAAA;AAChF,eAAAC,cAAA,GAAAA,cAAA;AALb,eAAAC,OAAA,GAAmB,IAAI,wDAAJ,CAAY,IAAZ,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,EAA7B,CAAnB;AAMH,eAAKC,QAAL,GAAgB,CAAhB;AACH;;AARmB;AAAA;AAAA,qCAUH;;;;;;;;AACb,6BAAM,KAAKF,cAAL,CAAoBG,WAApB,CAAgC,KAAhC,CAAN;;;2BAEI,KAAKN,cAAL,CAAoBO,QAApB,CAA6BC,QAA7B,CAAsCC,GAAtC,CAA0C,IAA1C,C;;;;;AACMC,+B,GAAY,KAAKV,cAAL,CAAoBO,QAApB,CAA6BC,QAA7B,CAAsCG,GAAtC,CAA0C,IAA1C,C;;AAElB,0BAAI,KAAKV,cAAL,CAAoBW,cAApB,CAAmCF,SAAnC,MAAkDG,SAAtD,EAAiE;AAC7D,6BAAKT,OAAL,GAAe,KAAKH,cAAL,CAAoBW,cAApB,CAAmCF,SAAnC,CAAf;AACA,6BAAKI,aAAL,GAAqB,IAArB;AACH;;;;;;;AAED,6BAAM,KAAKZ,MAAL,CAAYa,QAAZ,CAAqB,CAAC,WAAD,CAArB,CAAN;;;;AAGJ,6BAAM,KAAKZ,cAAL,CAAoBa,YAApB,EAAN;;;;;;;;;AACH;AAzBmB;;AAAA;AAAA,S;;;;gBAXhB;;gBAEA;;gBACA;;gBACA;;;;AAOKjB,iBAAW,6DALvB,gEAAU;AACPkB,gBAAQ,EAAE,aADH;AAEPC,gBAAQ,EAAR,qEAFO;;AAAA,OAAV,CAKuB,GAAXnB,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOAoB,iBAAiB;AAAA;AAAA,O;;AAAjBA,uBAAiB,6DAT7B,+DAAS;AACRvB,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,gFAJO,CADD;AAORwB,oBAAY,EAAE,CAAC,yDAAD;AAPN,OAAT,CAS6B,GAAjBD,iBAAiB,CAAjB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA","file":"pages-product-product-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProductPage } from './product.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProductPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2R1Y3QvcHJvZHVjdC5wYWdlLnNjc3MifQ== */\";","import {Component, OnInit, Optional} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Product} from '../../objects/product';\nimport {ProductService} from '../../services/product.service';\nimport {Router} from '@angular/router';\nimport {LoadingService} from '../../services/loading.service';\n\n@Component({\n    selector: 'app-product',\n    templateUrl: './product.page.html',\n    styleUrls: ['./product.page.scss'],\n})\nexport class ProductPage implements OnInit {\n    public product: Product = new Product('-1', '', '', 0, '');\n    public productLoaded: boolean;\n    public quantity: number;\n\n    constructor(private activatedRoute: ActivatedRoute, private productService: ProductService, private router: Router,\n                private loadingService: LoadingService) {\n        this.quantity = 1;\n    }\n\n    async ngOnInit() {\n        await this.loadingService.showLoading(false);\n\n        if (this.activatedRoute.snapshot.paramMap.has('id')) {\n            const productId = this.activatedRoute.snapshot.paramMap.get('id');\n\n            if (this.productService.getProductById(productId) !== undefined) {\n                this.product = this.productService.getProductById(productId);\n                this.productLoaded = true;\n            }\n        } else {\n            await this.router.navigate(['/products']);\n        }\n\n        await this.loadingService.closeLoading();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProductPageRoutingModule } from './product-routing.module';\n\nimport { ProductPage } from './product.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProductPageRoutingModule\n  ],\n  declarations: [ProductPage]\n})\nexport class ProductPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-row>\\n      <ion-back-button defaultHref=\\\"products\\\"></ion-back-button>\\n      <ion-menu-button></ion-menu-button>\\n      <ion-title>{{product.getTitle()}}</ion-title>\\n    </ion-row>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <ion-card class=\\\"ion-margin\\\">\\n    <ion-img *ngIf=\\\"productLoaded\\\" [src]=\\\"product.getImage()\\\"></ion-img>\\n    <ion-skeleton-text *ngIf=\\\"!productLoaded\\\" animated=\\\"true\\\" style=\\\"height: 500px; width: 100%; margin: 0;\\\"></ion-skeleton-text>\\n    <ion-card-header>\\n      <ion-card-title *ngIf=\\\"productLoaded\\\">{{product.getTitle()}}</ion-card-title>\\n      <ion-card-title *ngIf=\\\"!productLoaded\\\"><ion-skeleton-text animated=\\\"true\\\" style=\\\"width: 100px; height: 20px;\\\"></ion-skeleton-text></ion-card-title>\\n      <ion-card-subtitle *ngIf=\\\"productLoaded\\\">{{product.getPrice() | currency:'EUR'}}</ion-card-subtitle>\\n      <ion-card-subtitle *ngIf=\\\"!productLoaded\\\"><ion-skeleton-text animated=\\\"true\\\" style=\\\"width: 50px;\\\"></ion-skeleton-text></ion-card-subtitle>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-row>\\n        <p *ngIf=\\\"productLoaded\\\">{{product.getDescription()}}</p>\\n        <ion-skeleton-text *ngIf=\\\"!productLoaded\\\" style=\\\"width: 70%;\\\" animated=\\\"true\\\"></ion-skeleton-text>\\n        <ion-skeleton-text *ngIf=\\\"!productLoaded\\\" style=\\\"width: 65%;\\\" animated=\\\"true\\\"></ion-skeleton-text>\\n        <ion-skeleton-text *ngIf=\\\"!productLoaded\\\" style=\\\"width: 70%;\\\" animated=\\\"true\\\"></ion-skeleton-text>\\n        <ion-skeleton-text *ngIf=\\\"!productLoaded\\\" style=\\\"width: 65%;\\\" animated=\\\"true\\\"></ion-skeleton-text>\\n        <ion-skeleton-text *ngIf=\\\"!productLoaded\\\" style=\\\"width: 60%;\\\" animated=\\\"true\\\"></ion-skeleton-text>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col class=\\\"ion-no-padding\\\" size=\\\"5\\\">\\n          <ion-item class=\\\"ion-no-padding\\\">\\n            <ion-label position=\\\"fixed\\\">Amount</ion-label>\\n            <ion-input inputmode=\\\"numberic\\\" min=\\\"1\\\" max=\\\"20\\\" type=\\\"number\\\" [(ngModel)]=\\\"quantity\\\"></ion-input>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"7\\\">\\n          <ion-button class=\\\"ion-float-end ion-no-margin\\\" fill=\\\"outline\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"cart\\\"></ion-icon>\\n            Add to cart\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";"]}